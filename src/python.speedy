[transformToSnake]
speedy:
	verbose = true
description:
	A multi-select friendly macro to convert from CamelCase to snake_case.
	If any particular selection is empty (just a cursor), this will automatically expand it to the whole word first.
	(Kudos to https://stackoverflow.com/users/398630/brainslugs83 for some pointers)
javascript:
	let editor = window.activeTextEditor;
	speedy.expandAllSelectionsToWords();
	doTransform(0);
	function doTransform(i) {
	  let sels = editor.selections;
	  if (i < 0 || i >= sels.length) { return; }
	  let sel = sels[i];
	  let word_matches = editor.document.getText(sel).matchAll(/([a-z]+|[A-Z][a-z]*|[^A-Za-z]+)/g);
	  let words = [];
	  for (const match of word_matches) {words.push(match[0].toLowerCase())};
	  editor.edit(eb => {eb.replace(sel, words.join('_'))}).then(x => {
	    doTransform(i+1);
	  });
	}



[transformToCamel]
speedy:
	verbose = true
description:
	Same as transformToSnake, but vice versa
javascript:
	let editor = window.activeTextEditor;
	speedy.expandAllSelectionsToWords();
	doTransform(0);
	function doTransform(i) {
	  let sels = editor.selections;
	  if (i < 0 || i >= sels.length) { return; }
	  let sel = sels[i];
	  let words = editor.document.getText(sel).split('_')
	  let camel_words = words.map(function(w) {return w[0].toUpperCase() + w.slice(1,).toLowerCase()});
	  editor.edit(eb => {eb.replace(sel, camel_words.join(''))}).then(x => {
	    doTransform(i+1);
	  });
	}



[pytestForFunction]
speedy:
	verbose = true
cmd:
    cursorHome
vars:
	standard
javascript:
    const editor = window.activeTextEditor;
    const doc = window.activeTextEditor.document;
    let parts = doc.lineAt(window.activeTextEditor.selection.start).text.split('(');
	speedy.setVariable('function_name',parts[0].replace('def ','').trim());
    parts = parts[1].split(')');
    let args = parts[0].split(',');
    parts = parts[1].replace('->','').split(':');
    let hint = parts[0];
    let arg_names = [];
    let arg_vals = [];
    args.forEach(function(arg){
        let parts = arg.split('=');
        let val = (parts.length >= 2) ? parts[1].trim() : '';
        parts = parts[0].split(':');
        let arg_name = parts[0].trim();
        let hint = (parts.length >= 2) ? parts[1].trim() : '';
        if (val == ''){val = (hint == 'int') ? '123' : '\"abc\"'};
        arg_names.push(arg_name);
        arg_vals.push(val);
    });
    parts = (doc.isUntitled ? '' : doc.fileName).split('.')[0].split('\\\\')
	speedy.setVariable('unit_name',parts.slice(parts.length-3).join('.'));
	speedy.setVariable('arg_name_list',arg_names.join(','));
	speedy.setVariable('arg_val_list',arg_vals.join(','));
	speedy.setVariable('first_arg_val',arg_vals[0]);
snip:
# TODO Move this to test_$TM_FILENAME
from ..${TM_FILENAME_BASE} import $function_name
def test_$function_name():
	( ${arg_name_list} ) = ( $arg_val_list )
    assert $function_name($arg_name_list) == $first_arg_val

